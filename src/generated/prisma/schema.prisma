// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String?
  password  String? // Si usas OAuth, puede ser null
  createdAt DateTime   @default(now())
  batches   Batch[]
  templates Template[]
}

model Template {
  id          String   @id @default(cuid())
  name        String
  description String?
  imageUrl    String // URL de la plantilla subida
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())
  batches     Batch[]
}

model Batch {
  id          String   @id @default(cuid())
  name        String // Nombre del lote (ej: "Tarjetas Evento XYZ")
  description String?
  quantity    Int // Cantidad de tarjetas en el lote
  template    Template @relation(fields: [templateId], references: [id])
  templateId  String
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())
  codes       Code[]
}

model Code {
  id        String   @id @default(cuid())
  code      String   @unique // Código legible (ej: ABC123)
  hash      String   @unique // Hash único para QR
  number    Int // Número secuencial en el lote
  batch     Batch    @relation(fields: [batchId], references: [id])
  batchId   String
  createdAt DateTime @default(now())
  scans     Scan[] // Estadísticas de uso
  active    Boolean  @default(true)
  uses      Int?     @default(0)
}

model Scan {
  id        String   @id @default(cuid())
  code      Code     @relation(fields: [codeId], references: [id])
  codeId    String
  ipAddress String?
  userAgent String?
  scannedAt DateTime @default(now())
}
